; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = esp32
;default_envs = emulator_64bits

; Shared options
[env]
build_flags =
	-std=c++17
	-std=gnu++17

	-D LV_CONF_INCLUDE_SIMPLE
	-D LV_CONF_SKIP
	;------------- LVGL ------------------------------------------
	-D LV_MEM_CUSTOM=1
	-D LV_MEM_SIZE="(48U * 1024U)"
	-D LV_FONT_MONTSERRAT_8=1
	-D LV_FONT_MONTSERRAT_12=1
	-D LV_FONT_MONTSERRAT_14=1
	-D LV_FONT_MONTSERRAT_16=1
	-D LV_FONT_MONTSERRAT_18=1
	-D LV_FONT_MONTSERRAT_20=1
	-D LV_FONT_MONTSERRAT_22=1
	-D LV_USE_CALENDAR=1
	-D LV_USE_IMGBTN=1
	-D LV_USE_WIN=1
	-D LV_THEME_DEFAULT_DARK=1
	-D LV_BUILD_EXAMPLES=0
	
	;------------ OMOTE Defines -----------------------------------
	; Currently based on the ILI9341_DRIVER
	-D SCREEN_WIDTH=240
	-D SCREEN_HEIGHT=320

	-I src
	-I include
	-I include/notused
	-I HAL
	-I HAL/HardwareModules
	-I UI/
	-I UI/Core
	-I UI/Settings
	-I UI/MagentaTV
	-I Devices
	-I Devices/MagentaTV
	-I Devices/Samsung
lib_deps =
  ; Use direct URL, because package registry is unstable
  ;lvgl@~7.11.0
  ;lvgl=https://github.com/lvgl/lvgl/archive/refs/tags/v8.2.0.zip
lib_archive = false
build_src_filter =
	+<assets.c>
	+<../HAL/*.cpp>
	+<../HAL/HardwareModules/*.cpp>
	+<../UI/*>
	-<../UI/Settings/*>
	-<../UI/MagentaTV/MagentaTV.cpp>
	-<../UI/MagentaTV/Icons/*>
	-<../UI/AppleTV/*>
	-<../UI/SmartHome/*>
	+<../Devices/*>


[env:esp32]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
board_build.f_flash = 80000000L
board_build.f_cpu = 240000000L
;board_build.filesystem = littlefs
board_build.partitions = no_ota.csv
upload_speed = 1000000
lib_deps = 
	${env.lib_deps}
	lvgl=https://github.com/lvgl/lvgl/archive/refs/tags/v8.3.11.zip
	sparkfun/SparkFun LIS3DH Arduino Library@^1.0.3
	crankyoldgit/IRremoteESP8266@^2.8.4
	adafruit/Adafruit BusIO @ 1.9.6
	adafruit/Adafruit FT6206 Library@^1.0.6
	bodmer/TFT_eSPI@^2.5.23
	Wire
	WiFi
	SPI
	Keypad
	Preferences
build_flags = 
	${env.build_flags}
	-D OMOTE_ESP32
	-D CORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_DEBUG
	; ---------------- TFT_eSPI Defines replace(User_setup.h-file)---------
	-D USER_SETUP_LOADED=1
	-D ILI9341_DRIVER=1
	-D TFT_MOSI=23
	-D TFT_SCLK=18
	-D TFT_CS=5
	-D TFT_DC=9
	-D TFT_RST=-1
	-D SPI_FREQUENCY=40000000
	-D SPI_TOUCH_FREQUENCY=2500000
	-D DISABLE_ALL_LIBRARY_WARNINGS
	
	; --------------- LVGL Defines --------------------------------------
	-D LV_TICK_CUSTOM=1
	-D LV_TICK_CUSTOM_INCLUDE="\"Arduino.h\""
	-D LV_TICK_CUSTOM_SYS_TIME_EXPR="'(millis())'"

	-I HAL/Targets/ESP32
	-I HAL/Targets/ESP32/Display
	-I HAL/Targets/ESP32/WifiHandler
	-I HAL/Targets/ESP32/Battery
	-I HAL/Targets/ESP32/IRHandler
	-I HAL/Targets/ESP32/Keys

monitor_filters = 
	esp32_exception_decoder
build_unflags = 
	-std=gnu++11
build_src_filter =
	${env.build_src_filter}
	+<main.cpp>
	+<../HAL/Targets/ESP32/HardwareRevX.cpp>
	+<../HAL/Targets/ESP32/Display/Display.cpp>
	+<../HAL/Targets/ESP32/WifiHandler/*>
	+<../HAL/Targets/ESP32/Battery/*>
	;+<../HAL/Targets/ESP32/IRHandler/*>
	+<../HAL/Targets/ESP32/Keys/*>


[env:emulator_64bits]
platform = native ;@^1.1.3
extra_scripts = support/sdl2_build_extra.py
build_flags =
  ${env.build_flags}
  -D OMOTE_SIM
  ; Add recursive dirs for hal headers search
  !python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('HAL/sdl2')]))"
  -lSDL2
  ; SDL drivers options
  -D LV_LVGL_H_INCLUDE_SIMPLE
  -D LV_DRV_NO_CONF
  -D USE_SDL
  -D SDL_HOR_RES=SCREEN_WIDTH ;240
  -D SDL_VER_RES=SCREEN_HEIGHT ;320  
  -D SDL_ZOOM=1
  -D SDL_INCLUDE_PATH="\"SDL2/SDL.h\""

  ; LVGL memory options, setup for the demo to run properly
  ;-D LV_MEM_CUSTOM=1
  ;-D LV_MEM_SIZE="(128U * 1024U)"

  ; SDL2 includes, uncomment the next two lines on MAC OS if you intalled sdl via homebrew
  !find /opt/homebrew/Cellar/sdl2 -name "include" | sed "s/^/-I /"
  !find /opt/homebrew/Cellar/sdl2 -name "libSDL2.a" | xargs dirname | sed "s/^/-L /"

  -I HAL/Targets/SDL
  -I HAL/Targets/SDL/wifiHandlerSim

	-I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/**

lib_deps =
  ${env.lib_deps}
  lvgl=https://github.com/lvgl/lvgl/archive/refs/tags/v8.2.0.zip
  ; Use direct URL, because package registry is unstable
  ;lv_drivers@~7.9.0
  lv_drivers=https://github.com/lvgl/lv_drivers/archive/refs/tags/v8.2.0.zip
  
build_src_filter =
	${env.build_src_filter}
	+<simMain.cpp>
	+<../HAL/Targets/SDL/*>
